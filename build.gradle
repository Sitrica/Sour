import org.apache.tools.ant.filters.ReplaceTokens
apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: 'eclipse'

jar.archiveName = project.name + '.jar'

configurations {
	shade
	compile.extendsFrom shade
}

repositories {
	mavenCentral()
	jcenter()

	// Spigot
	maven {
		url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
	}

	// Bungeecord
	maven {
		url "https://oss.sonatype.org/content/repositories/snapshots/"
	}

	// HolographicDisplays
	maven {
		url 'https://ci.filoghost.me/plugin/repository/everything/'
	}

	// Citizens
	maven {
		url "http://repo.citizensnpcs.co/"
	}

	//Jitpack
	maven {
		url 'https://jitpack.io'
	}

}

dependencies {

	// HolographicDisplays
	implementation (group: 'com.gmail.filoghost.holographicdisplays', name: 'holographicdisplays-plugin', version: '2.3.2') {
		exclude group: 'org.bstats', module: 'bstats-bukkit-lite'
	}

	// Citizens
	implementation (group: 'net.citizensnpcs', name: 'citizensapi', version: '2.0.24-SNAPSHOT')

	// Spigot
	implementation (group: 'org.spigotmc', name: 'spigot-api', version: '1.14.4-R0.1-SNAPSHOT')

<<<<<<< HEAD
=======
	// Netty
	implementation (group: 'io.netty', name: 'netty-all', version: '4.1.43.Final')

>>>>>>> 401bb2264eb1442a069eec1c955bf752dc5a5440
	// Vault
	implementation (group: 'com.github.MilkBowl', name: 'VaultAPI', version: '1.7')

	shade fileTree(dir: 'libraries', include: '*.jar')

}

publishing {
	repositories {
		maven {
			name = "SourCore"
			url = uri("https://maven.pkg.github.com/Sitrica/SourCore")
			credentials {
				username = 'Sitrica'
				password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_PACKAGES_KEY")
			}
		}
	}
	publications {
		gpr(MavenPublication) {
			version = project.property("version")
			groupId = 'com.sitrica'
			artifactId = 'core'
			from(components.java)
		}
	}
}

configurations {
	runtime.exclude group: 'org.bstats', module: 'bstats-bukkit-lite'
}

processResources {
	from (sourceSets.main.resources.srcDirs) {
		filter ReplaceTokens, tokens: ["version": project.property("version")]
		include '**/*.yml'
	}
}

jar {
	configurations.shade.each { dep ->
		from (project.zipTree(dep)) {
			exclude '**/*.php'
			exclude '**/*.yml'
			exclude 'META-INF', 'META-INF/**'
		}
	}
}
